Src = https://roadmap.sh/guides/what-is-internet

 웹 기반 응용프로그램들의 폭발적인 성장 이래로, 모든 개발자들은 인터넷이 어떻게 작동하는지를 이해함으로써 이득을 얻을 수 있다. 이 글에서는 code.org에서 인터넷에 대해 다룬 개론적 짧은 비디오 시리즈를 포함하고 있다. 당신은 인터넷의 기초와 어떻게 동작하는지에대해 배울 것이다. 이 글을 읽은 후에 아래의 질문들에 답할 수 있을 것이다.

 -인터넷이란 무엇인가?
 -인터넷상에서 정보들이 어떻게 움직이는가?
 -네트워크가 어떻게 서로 대화하고 프로토콜들이 관여하는가?
 -패킷과 라우터 그리고 신뢰성의 관계는 무엇인가?
 -http와 html - 이 웹페이지를 당신의 브라우저에서 어떻게 보고 있는가?
 -인터넷 위에서 정보전달은 어떻게 안전하게 이루어지는가.
 -사이버 보안이란 무엇이고 인터넷 범죄들로는 어떤게 흔히 있나?

1. 인터넷이란 무엇인가.

 인터넷은 표준화된 프로토콜집합을 통해 소통하는 서로연결된 컴퓨터들의 전세계적 네트워크이다.
아래의 비디오에서 인터넷의 아버지중 하나인 빈센트 서프가 인터넷이 어떻게 작동하게 됐고 어떻게 한 사람이나 조직이
그 것을 해냈다고 할 수 없는지 설명한다.

인터넷은 누가 관리하는가.

답은 누구도, 누구든 이라고 할 수 있다.

누가 만들었는가? 볼펜과 지퍼를 발명한 사람을 알려고 하지 않는 것과 마찬가ㅉ지 인 것. 핵전쟁에도 살아남을 수 있는 대화 수단. (탈 중앙화) 인터넷은 수많은 독립적 네트워크들의 집합 이기 때문에 어떻게 라우팅되고 어떻게 네트워크들이 만들어질지에 대한 중앙 통제는 없다고 봐도 무방하다. 그리고 누구랑 대화 할 것인가 까지도. 전후무후한 방식이라 할 수 있다. 정보 공유가 인터넷의 매력이고, 이건 어떻게 과학이 진행되는지와 같다. 그래서 이건 사람들에게 새로운 어플리케이션을 생각할 기회이다. 인터넷으로부터 누구도 벗어 날 수 없는데 왜 인터넷을 이해하고, 사용할 생각을 하지 않는가?

https://youtu.be/Dxcc6ycZ73M

2 와이어, 케이블, 와이 파이.

인터넷 상의 정보들은 컴퓨터에서 컴퓨터로 다양한 수단(이더넷 케이블이나, 광섬유 케이블, 무선 신호(라디오 파등))을 통해 비트의 형태로 이동한다.

아래 비디오에서는 인터넷 데이타 전송의 다른 수단들과 각각의 장단점을 알아본다.

https://youtu.be/ZhEf7e4kopM

각 기기에서 정보들이 어떻게 이동하는가? 마법이 아니라 인터넷이라는거다. 정보를 이동하기위한 만질 수 있는 유형의 것. 인터넷은 우편과 매우 비슷하다. 하지만 그 보내지는 물리적인 물건들은 약간 다르다. 박스나 봉투대신 인터넷은 이진 정보를 전달한다. 정보는 비트로 만들어져있다. 비트란 어떤 반대되는 것들의 짝이라고 묘사할 수 있다.
하나의 바이트는 8개의 비트로 구성된다. 1024 byte = kilobyte 1o24kb= 1mb. 보통 노래는 3에서 4 메가바이트로 부하화된다. 노래든 이미지든 인터넷에 존재하는 모든 것들은 비트들로 전송된다. 즉 정보의 원자라고 할 수 있다. 하지만 우리가 물리적으로 다른 곳으로 1과 0들을 보내는 것은 아니다. 그래서 전파와 전선을 통해 보내지는 물리적인 것은 어떤 것일까? 인간이 어떻게 물리적으로 소통할 수 있는가 작은 예를 보자. 모스부호등을 생각해보자. 이런 것들은 매우느리고 인간에 의존적이며 에러가 발생하기 쉽다. 우리가 정말 필요ㅛ로 하는것은 기계이다. 우리 역사를 통틀어 다른 물리적 수단을 통해 2진 정보를 보내려는 시도는 매우 많았다. 오늘 우리는 이런 신호들을 빛이나 전기 라디오 파를 통해 보낸다. 전기를 통해 비트를 보내기 위해 당신이 청동선으로 연결된 두개의 전구를 가지고 있다고 생각해보자. 만약 전구 작동자가 전기를 키면 전굿불이 들어올 것이다. 전기 없이는 불이 안들어온다. 만약 양쪽 에서 전부 불을 킨다는 것은 1 전부 끈다는 건 0을 의미한다. 하지만 만약 5연속 0을 보내고 싶다고 해보자. 하지만 이런 방법으로는 두사람 모두 0의 숫자를 셀 수 없다. 솔루션은 시계나 타이머의 도입이다. 작동자는 송신자가 1초에 1비트를 보낸다고 약속해볼 수 있다. 그럼 송신자는 앉아서 매초마다 통신상 어떻게 표시되고 있는지 확인 할 것이다. 0 5개를 연속으로 보내고 싶다면 5초동안 전구를 키지 않으면된다. 하지만 우리는 현실에서 분명 이것 보다 빠른 속도로 정보를 전달하고 싶어한다. 그래서 우리는 광대역(기기의 최대 전송용량)을 늘린다. 광대역은 우리가 실제적으로 특정한 시간동안 보낼 수 있는 비트의 갯수인 비트레이트에 의해 정의된다. 비트레이트는 대부분 몇초동안 측정되고는 한다. 다른 속도 측정 수단은 레이턴시 이다. 요청중인 기기에서 하나의 비트가 다른 곳으로 전송되는데 걸리는 시간의 총량을 의미한다. 인간의 예에서 1초에 1개의 비트는 빠른 속도이고 아마 인간은 계속 지속하기도 힘들 것이다. 그래서 만약 3메가바이트의 노래를 3초에 다운 받고 싶다면 약 800만개의 비트가 하나의 메가바이트에 있고 이건 비트레이트로 환산시 초당 800만개의 비트레이트를 의미한다. 하지만 인간은 800만개의 비트를 매초마다 보내거나 받을 수 없다. 하지만 기계는 기계는 그걸 잘 해낼 수 있다. 하지만 하나의 의문점이 남았을 것이다. 어떤 종류의 케이블로 이 메시지를 보내야 하는가? 그리고 이 신호가 얼마나 갈 수 있는 가 등의 의문점 말이다. 

 이더넷 와이어(집이나 학교에서 쉽게 볼 수 있는)에서는 측정가능한 신호들이 몇백피트만 가도 줄어든다. 장점은 싼 가격. 단점은 신호 손실이 있겠다. 그래서 만약 인터넷이 전세계에서 작동하는 것들 보고 싶다면 초장거리 통신을 위해 다른 방법들이 필요하다. 대양을 건너는 등의 통신 말이다. 그래서 우리는 다른 어떤 걸 사용할 수 있는가? 그저 선을 지나는 전기적 신호보다 빠르게 움직이는 것 에는 뭐가 있을까? 빛이 있을 것이다. 우리는 광섬유 케이블 (fiber obtic cable)을 사용해 비트를 광선의 형태로 다른 곳에 보낼 수 있다. 광섬유 케이블은 빛을 보여주기 위해 고안된 유리다발이라고 할 수 있다. 광선을 케이블을 통해 보낸때 광선은 시작점 부터 끝까지 케이블 안에서 충돌하며 요동친다. 이 요동하는 각도에 따라 우리는 동시에 여러개의 비트를 보낼 수 있다. 그리고 이 모든건 빛의속도로 움직인다. 이 광섬유는 매우 빠르다. 그리고 신호가 거리에 의해 감쇄. 손실되지 않는다. 즉 수백 마일을 신호 손실 없이 갈 수 있다. 이건 우리가 해양층을 건너 대륙간 통신을 구성할때 광섬유를 사용하는 이유이다. 2008년 이집트 알렉산드리아 근처에서 이 케이블이 절단되는 일이 있었다. 그리고 이 일로인해 대부분의 중동과 인도에서의 인터넷 사용이 큰 영향을 받았다. 그래서 우리는 이 인터넷을 굉장히 당연한 것으로 받아들이지만 이건 굉장히 약한 물리적 체계이다. 광섬유는 정말로 멋지지만 매우비싸고 다루기 어렵다. 대부분의 목적에서 아마 그냥 구리케이블을 찾을 것이다. 하지만 이 선들 없이도 우리는 어떻게 작동시킬까 무선통신 말이다. 라디오파이다. 무선 비트 송신기는 일반적으로 비트를 다른곳으로 전송하기 위해  라디오 신호를 이용한다. 송신 기계는 아마 0과 1의 비트신호를 해석하고 이걸 다른 주파수를 가진 라디오 파로 바꿔야 할 것이다. 수신기는 이 프로세스를 거꾸로 동작하며 다시 이진 컴퓨터 신호로 번역해야 할 것이다. 그래서 무선통신은 우리 인터넷을 이동가능하게 바꿨지만 라디오 신호는 그만큼 멀리 이동하지는 않는다. 완전히 신호를 왜곡하지않는 이상. 장점. 모바일임 단점. 짧은 범위임. 이게 왜 로스엔젤레스에 있는 라디오를 시카고에서 받아 볼수 없는지의 이유이다. 무선이 정말 대단한 것처럼 우리는 아직도 유선 인터넷에 크게 의존하고 있다. 커퓨숍에서 와이파이를 사용한다면 비트가 이 무선 라우터를 통해 보내 질 것이고. 물리적 선으로 전환되어 인터넷의 매우 먼거리를 움직일 수 있을 것이다. 미래에 비트를 보내는 물리적 수단이 위성간 레이저나 드론,풍선에서 시작된 라디오파 등으로 바뀔지도 모른다. 하지만 기저에 있는 이진법 정보표현이라거나 송수신을 위한 프로토콜들은 꽤 비슷하게 같은 방식에 머물러 있을 것이다. 모든 종류의 영상과 텍스트 들은 전부 바이너리 신호로 환원 될 수 있으며,전기적 펄스, 광선, 라디오파에 의해 전달된다.♥︎

3. 인터넷 주소와 DNS

이제 데이터를 전송하는 인터넷의 물리적 수단에 대해 알게 됐다. 이제는 그 프로토콜들을 배워볼 차례이다. 이 광범위한 글로벌 컴퓨터 네트워크에서 정보는 어떻게 이동할까? 아래 영상은 ip, dns, 그리고 이러한 프로토콜들이 인터넷을 어떻게 작동시키는지 간단하게 배운다.

인터넷 : ip주소와 dns.

나는 마소에 근무하는 파올라다. 인터넷이 어떻게 작동하는지에 대해 이야기 해보자. 내 직업은 다른 사람과 대화할 수 있게 해주는 통신에 의존하고 있다. 하지만 1970년대로 돌아가면 이 수단에 대한 표준이 존재하지 않았다. 빈트서프나 밥칸 등이 인터넷 네트워크 프로토콜을 발명했다. 이 통신이 가능하도록. 이 발명은 우리가 인터넷이라고 현제 부르는 것에 거대한 작품을 남겨놨다. 인터넷은 통신망들의 통신망이다. 전세계 수십억개의 기계들을 하나로 연결하며, 우리는 아마 와이파이를 통해 랩탑이나 핸드폰으로 접속해있을지 모른다. 이 와이파이 연결은 ISP라 불리는 곳에 연결하고, 이 isp는 수십억개에 달하는 전세계의 기계들을 수십만개의 네트워크로 묶는다. 사람들이 인터넷에 대해 인정하지 않는ㄱㅅ은 . 인터넷은 디자인 철학이고, 프로토콜 집합으로 표현된 구조이다. 프로토콜은 잘 알려진 규칙과 표준의 집합이다. 만약 모든 집단이 프로토콜을 사용하는데 동의한다면 문제없이 통신하는 걸 가능케 할 것이다. 인터넷이 어떻게 물리적으로 작동하는지는 이 디자인 철학이 인터넷의 새로운 통신 기술을 어떻게 채택하고 흡수하는 지보다 중요하지 않다. 이것은 인터넷을 어떤식으로든 사용하기 위한 새로운 기술을 위해서이다, 우리는 어떤 프로토콜을 사용해 연결할지만 알면 된다. 인터넷상의 서로 다른 기기들은 유일한 주소들을 가지고 있다. 인터넷 주소는 핸드폰번호나, 어떤 한 종류의 도로주소와 같다. 네트워크의 각 종단에서 각 컴퓨터나 기기들은 유일한 주소들을 가지고 있다. 이것은 가정이나 회사들이 우편주소를 가지고 있는 것과 비슷하다. 당신은 메일을 보내기 위해 상대방을 알 필요가 없다. 하지만 그 상대의 주소나 어떻게 그 주소를 적을지는 중요할 것이다. 결국 편지는 메일 시스템에 의해 목표지 까지 이송될 수 있다. 인터넷상의 컴퓨터를 위한 주소 시스템과 비슷하다. 그리고 인터넷프로토콜(IP)이라 불리는 인터넷 통신에 있어 가장 중요한 프로토콜의 한부분을 만든다. 이제 컴퓨터의 주소는 ip address라고 할 수 있다. 웹사이트를 방문하는 것은 사실 당신의 컴퓨터가 다른 컴퓨터에 정보를 요청하는 것과 다름 없다. 당신의 컴퓨터는 다른 컴퓨터의 아이피 주소로 메시지를 보내고 신호는 시작 주소를 따라간다. 그렇게 함으로써 상대방의 컴퓨터는 어디에 반결과물을 보내야할지 알 수 있다. 

 당신은 아마 ip주소를 봤을지도 모른다. 그것은 그냥 많은 숫자들에 불과하다. 이 숫자들은 계층적으로 구성되어 있다. 일반적 주소들이 이름명 도시명 도로명 집번호를 가지고 있는 것처럼 ip주소도 많은 부분들을 가지고 있다. 다른 디지털 데이터와 같이 이 숫자들은 비트들로 표현된다. 전통적 아이피 주소들은 각각의 부분이 8비트로 이루어진 32비트 길이이다. 첫 부분부터 국가를 구별하는 숫자, 지역을 구별하는 숫자, 하부 네트워크 , 구체적 기기 순으로 이루어져 있다. 이런 ip주소체계를 ipv4라고 한다. 이건 1973년에 디자인 됐으며 80년대 초 광범휘하겍 채택됐고 40억개보다 많은 량의 고유 주소를 인터넷에 연결중인 기기들에 할당했다. 하지만 인터넷은 빈트 서프가 상상했던 40억개의 고유 주소를 아득히 뛰어넘는 인기를 가지게 되었다. 현재 우리는 ipv6라고 불리는 훨 씬 더 긴 주소로 전환하는 과도기에 살고 있다. 이것은 각 주소마다 128비트를 사용하고 340 언데실리온을 넘는 숫자의 고유 주소를 제공한다. 이건 지구상의 모래 한톨한톨이 고유의 인터넷 프로토콜 주소를 가지는 것보다 많은 양이다. 대부분의 사용자들이 인터넷 주소들을 보고 실제로 신경쓸일은 없다. 도메인 네임 시스템이나 dns라고 하는 존재가 www.example.com 과 같은 이름을 아이피 주소와 연결해준다. 컴퓨터는 도메인 이름을 검색하고 연결된 ip주소를 찾는데 dns를 사용한다. dns서버는 해당 도메인 네임을 가진 아이피를 다른 dns에 질의하여 ip주소를 가지고 오게 됨. 수십억개에 달하는 우리 기기들이 다시 수십억개에 달하는 웹사이트에 어떻게 연결 될 수 잇는가. 하나의 dns서버가 모든 디바이스로부터 오는 요청을 전부 다룰 수는 없다. 그래서 dns서버는 분산 계층적으로 존재하고 영역들로 나누어져 .org, .com, .net등의 주요 도메인을 처리간다. nds는 본래 정부나 교육단체를 위해 개방적이고 공적인 소통 프로토콜로서 만들어졌다. 그 개방성때문에 dns는 사이버 공격으로부터 취약하다. 한 공격의 예로는 dns스 푸핑이 있다. 해커는 dns서버를 이용해 도메인네임을 거짓된 아이피 주소로 매칭 시킨다. 이것은 공격자가 사용자를 사칭 사이트에 연결 시키고, 이게 일어난다면 여러 문제들에 취약하게 되는데, 사기 사이트를 실제 사이트인 것처럼 사용하게 만들기 떄문이다. 

 인터넷은 거대하고 매일 커지고 있다. 하지만 dns나 ip는 인터넷이 얼마나 빠른 속도로 커지든 상관없이 확장하도록 설계되었다. 

4. 패킷들. 라우팅과 신뢰성

인터넷에서 돌아다니는 정보는 고정된 경로를 지날 필요가 없다. 사실 전송하는 중에서도 경로는 계속 바뀐다. 이 정보전송은 패킷의 형태로 일어나고 이 패킷들은 특정한 요소에 따라 다른 루트들을 따라갈 것이다.

이 비디오에서 당신은 정보패킷이 어떻게 한 컴퓨터에서 다른 컴퓨터로 목적지까지 도달할때 어떻게 라우팅 되는지 살펴본다.

 내 이름은 린이고 스포티파이에서 일하는 소프트웨어 엔지니어이다. 나는 먼저 내가 자주 인터넷의 신뢰성을 당연한 것으로 받아들인다는 것을 인정하고 시작하겠다. 엄청난 양의 정보들이 인터넷 중심으로 확장되고 있다는 것은 매우 놀랍다. 하지만 당신에게 전달될 모든 조각들이 신뢰성 있게 전달된다는 것은 어떻게 가능 한 것일까? 당신이 스포티파이에서 노래를 재생하고 싶다고 하자. 그건 당신의 컴퓨터 연결이 스포티파이 서버에 직접적으로 연결되고 스포티파이가 당신에게 노래를 직접적으로 전용회선을 통해 전달해준다는 것은 당연하게만 보인다. 하지만 사실 그건 인터넷이 작동하는 방식이 아니다. 만약 인터넷이 직접적이고 전용의 연결을 만든다면 수백만의 유저가 참여하는 것은 불가능 할지도 모른다. 특히 모든 컴퓨터가 항상 작동한다는 보장이 없기도 없다. 대신에 인터넷에 돌아다니는 데이터들은 훨씬 덜직접적으로 돌아다닌다. 

 매우 오래전 1970년대 내 파트너 밤칸과 나는 현재 인터넷이라고 불리는 것을 설계하고 있었다. 밥과나는 인터넷 프로토콜과 그 설계를 설계하는 기회를 가졌다. 그래서 우리는 인터넷 성장과 발전에 참여하는 것을 계속해왔다. 인터넷이 한컴퓨터에서 다른 컴퓨터로 전송되는 방식은 매우 흥미롭다. 그건 고정된 경로를 따라갈 필요도 없고 사실 컴퓨터 통신중에도 계속 경로가 바뀌고 있을지 모른다. 인터넷 정보는 우리가 정보의 패킷이라고 불리는 형식으로 컴퓨터를 이동하고 패킷은 한 지역에서 다른 곳으로 마치 당신이 차를타고 장소를 이동하는 것과 매우 유사하게 움직인다. 교통정체나 도로 상태에 따라 당신은 선택하거나 다른 루트를 강제받을지도 모른다. 그리고 당신이 차로 모든 종류의 물건들을 이송할 수 있는 것처럼 많은 종류의 디지털 정보가 ip 패킷과 함께 전송될 수 있다. 하지만 거기에는 제한이 존재한다. 우주선의 예를 들어보자. 건조된 공간에서 발사될 공간으로 이송해야 할 것이다. 하나의 트럭에는 다 들어갈 수 없기때문에 여러 조각으로 나뉘고 트럭들에 나뉘어서 이송될 것이다. 그 트럭들은 아마 다른 경로들을 이용하고 다른 시간에 도착할지도 모른다. 하지만 모든 조각이 다 도착한다면 당신은 완전한 조각으로 재조립해서 발사준비할 수 있을 것이다. 인터넷에서도 이와 비슷하게 작동한다. 만약 당신이 친구에게 전송하고 싶거나 웹사이트에 업로드하고 싶은 엄청나게 큰 이미지가 있다고 해보자. 그 이미지는 아마 한 패킷으로 전송하기 힘들만큼 수천만개의 1이나 0으로된 비트들로 이뤄져있을 것이다. 이미지를 송신하는 컴퓨터 측은 아마 패킷이라고 불리는 수백 수천개의 패킷으로 그것을 쪼갤 것이다. 차와 트럭과 다르게 이 패킷은 운전자가 존재하지 않고 그들의 경로를 택하지 않는다. 각 패킷은 송신과 수신측 주소만 가지고 있을 뿐이다. 라우터라고 불리는 특수목적 컴퓨터는 패킷이 네트워크상에서 부드럽게 움직이도록 교통 관리자의 역할을 한다. 만약 한 경로가 정체 됐다면 각각의 패킷들은 아마 다른 이동 경로를 통해서 약간 다른 시간에 다른 순서로 목적지에 도착할 것이다. 

 이것이 어떻게 작동하는지 이야기해보자. 인터넷의 일부분으로서 라우터는 패킷을 보내기위해 다양한 경로를 가지고 있다. 그리고 이 라우터들은 목적지의 아이피주소에 기반하여 가장 비용이 적게드는 이용가능 경로를 찾는다. 여기서 cheapest 는 금전적 코스트를 의미하지 않는다. 그저 시간과, 회사들간의 정치, 관계 등의 비기술적요소를 의미한다. 데이터를 위한 최고의 루트가 가장 직접적인 경로가 아닌 경우는 흔하다. 경로에 많은 선택지등을 갖는건 네트워크를 좀더 실수에 민감하지 않도록 만든다. 즉 네트워크는 뭔가가 심각하게 잘못되더라도 계속해서 패킷을 보낼 수 있다는 것을 의미한다. 이건 인터넷의 가장 중요한 원칙 신뢰성이 된다. 만약 당신이 자료들을 요청했는데 모든 자료가 워지 않았다면 어떻게 할것인가. 당신이 노래를 듣고 싶어한다고 가정해보자. 당신은 어떻게 노래가 전송돼 환벽하게 재생될거란 100퍼센트 확신을 가질 수 있는가? 당신의 새로운 친구 tcp를 도입해보자. tcp는 패킷으로서 당신의 데이타를 송수신 될 수 있도록 관리한다. 보장된 메일 서비스 같은 거라고 생각하자. 만약 당신이 당신의 디바이스에 노래를 요청한다면 스포티파는 많은 패킷으로 노래를 나눠 전송한다. 만약 당신의 패킷이 도착한다면 tcp는  전체적 재고 검사를 할 것이고, 수신된 각각의 패킷에 대해 그 확인 보증 내용을 보낼 것이다. 만약 모든 패킷이 거기 있다면 tcp는 당신의 배송에 사인을 할 것이고, 모든 절차가 끝나게 된다. 만약 tcp가 유실된 조금의 패킷들을 찾는다면, 그 확인 보증을 해주지 않을 것이다. 다르게 말하자면 당신의 노래가 잘 재생되지 않고나 일부가 소실되었을 수도 있다는 것을 말한다. 각각의 유실되거나 불완전한 패킷을 위해 스포티파이는 다시 그걸 보내줄것이다. tcp가 노래 요청에대해 많은 패킷들의 내용을 확인한다면 당신의 노래는 실행되기 시작할 것이다. Tcp와 라우터 시스템이 정말 대단한 것은 그게 확장 가능하다는 점이다. 그ㄷ그들은 80억개가량의 기기들과 통신할 수 있지만 사실 이런 오류최소화와 불필요한 중복 방지 원칙 덕분에 많은 라우터에 연결돼 있을 수록 인터넷은 더 신뢰할 수 있어진다.
정말 대단한점은 우리는 이 서비스를 사용하고있는 모든이들에게 방해 없이 인터넷을 성장시키고 확장할 수 있다는 것이다. 인터넷은 수십만개의 네트워크들과 수십억개의 물리적으로 연결된 기기 또는 컴퓨터로 구성돼 있다. 데이터가 어떻게 송수신 될것인지 합의된 표준이 인터넷에 존재하기 때문에 시스템은 인터넷을 상호 연결되게 하고 서로 대화할 수 있게 한다. 인터넷에 따라 배치된 연산기기나 라우터들은 모든 패킷들이 그들이 다시 조립될 목적지까지 만약 필요하다면 일관된 순서로 도달하게하는 것을 돕는다. 이게 당신이나 다른 사람이 이메일을 보낼때, 웹프라우징 할떄, 비디오채팅할때, 모바일앱을 쓸때, 센서나 기기들이 상호 소통할떄 하루에만 수십억번씩 일어나는 일이다.

5. http와 html

http는 웹페이지가 인터넷을 통해 전송될때 필요한 표준 프로토콜이다. 아래의 비디오는 http에 대한 간단한 설명을 하고 웹브라우저가 당신을 위해 어떻게 웹사이트를 로드하는지 보여준다.

 나느 재스민 로렌스고 나는 엑스박스 원 엔지니어 팀에서 프로그램 매니저를 하고 있다. 우리의 가장 중요한 기능은 엑스박스 라이브라고 불리는 것이다. 이건 전세계의 게이머들은 연결 시켜주는 온라인 서비스이다. 그리고 우리는 이게 가능할 수 있게 인터넷에 많은 부분을 의존한다. 이건 절대 쉬운 임무가 아니며, 이 장면 뒤에는 무수히 많은 것들이 일어나고 있다. 인터넷은 사람들이 어떻게 상호작용하고 연결되는지 완전히 바꿔놓고 있다. 하지만 이건 어떻게 작동할까? 이세상에 걸친 컴퓨터들이 실제로 어떻게 상호 통신하고 있을까? 웹 브라우징을 살펴보자. 먼저 당신은 웹브라우저를 여는데 이건 웹페이지에 접근하기 위해 사용하는 어플리케이션이다. 다음으로 웹주소나 (Uniform resource locator)라고 하는 URL을 친다.

 나는 데이빗캅프 텀블러의 창업자이다. 그리고 오늘 우리가 매일 사용하는 웹브라우저가 실제로 어떻게 작동하는지 이야기 해볼 것이다. 그래서 당신은 아마 주소를 웹브라우저에 쳤을떄 어떤일이 일어나는지 궁금했을 것이다. 그리고 이건 정말 당신이 생각하는 것만큼 미친일이다. 엔터를 치는순간 당신의 컴퓨터는 수천마일이나 떨어진 곳에 있는 서버라고 불리는 다른 컴퓨터에 대화를 시작하게 된다.  그리고 밀리초동안 컴퓨터는 서버에 웹사이트를 요청한다. 그리고 서버는 http라고 불리는 언어로 당신의 컴퓨터에 답신한다. http는 (HyperTextTransferProtocol의 준말이다)
당신은 아마 컴퓨터가 다른 컴퓨터에 문서를 요청할때 사용하는 언어쯤으로 생각할 수도 있다. 그리고 이건 사실 굉장히 직접적이다. (웹브라우저와 서버 사이에서 통신하기 위해 사용되는 언어임) 만약 컴퓨터와 웹서버간의 대화를 가로채고 싶다면 그건 대부분 get요청이라고 불리는 것들로 구성돼 있다. 그 대화는 단지 get이라는 단어들과 당신이 요청하는 문저의 이름들로 구성돼 있다. 그래서 당신이 텀블러에 로그인 한다거나 우리 로그인 페이지를 로드하고 싶다면. 당신이 하는 것은 텀블러의 서버에 GET/login이라고 하는 get요청을 보내는 것이다.그리고 이것은 텀블러 서버에 당신이 텀블러 로그인 페이지의 html코드 전부를 원한다는 것을 알려준다. html(hyper text markup language)은 웹브라우저가 페이지의 외관을 어떻게 만들것인지를 알려주는 언어라고 보면된다. 그냥 정말 단순한 큰 서류덩어리인 위키피디아를 떠올려보자. 그리고 html은 제목을 크고 작게 만들때, 폰트의 위치, 폰트의 두께, 링크의 연결, 중앙에 이미지 넣기. 이미지 정렬하기 등을 할때 사용하는 언어이다.

 웹페이지의 텍스트는 html안에 직접적으로 포함돼 있다. 그러나 다른부분. 이미지들이나 비디오들 은 요청돼야하는 그들의 url을 가지고 파일을 나눈다. 브라우저는 각각의 요소들마다(이미지나 비디오) 개별적 http 요청을 송신하고 도착하면 그 것들을 보여준다. 만약 웹페이지가 서로다른이미지들을 많이 가지고 있다면 각각은 분리된 http 요청들을 일으키고 페이지는 느리게 로드된다. 당신이 웹을 여행할때 당신은 get만을 사용해 페이지를 요청하는 것이 아니다.
때떄로 언제 양식을 채우고 검색 쿼리를 입력할 것인지에 대한 정보를 보낸다. 브라우저는 이 정보를 단순한 텍스트로 http post요청을 사용하는 웹서버에 보낸다.

 당신이 텀블러에 로그인 한다고 가정해보자. 당신이 먼저 할것은 post 요청을 보내고, 그 요청은 첨부될 수 있는 정보를 가진채 텀블러 로그인 페이지에게 보내진다. (Get은 서버에서 데이터를 가져와 보여줄때 사용. post는 서버상의 데이터 값이나 상태를 바꾸기 위해 사용) 즉 이메일이나 패스워드등을 가지고 텀블러 서버에 전달된다. 서버는 그래 너는 데이비드가 맞구나를 알아낼 것이다. 그러면 서버는 "당신의 브라우저에 로그인 성공했어."라고 말하는 웹페이지를 반환 할것이다. 하지만 웹페이지와 함께, 보이지 않는 쿠키데이터와 같은 것들도 함께 반환하는데. 브라우저는 그걸 보고 저장해야한다. 이것은 매우 중요하다. 웹사이트가 당신이 누구인지 기억할 수 있는 유일한 방법이기 떄문에. 
그 모든 쿠키데이터는 실제로 텀블러에서 쓰여질 주민카드 라고 할 수있다. 그건 숫자들이다. 당신을 데이빗으로서 확인 시켜줄. 그러면 웹브라우저는 그 숫자를 유지하고 당신이 텀블러를 새로고침한다면. 당신이 다시 텀블러에 갔을때 웹브라우저는 자동적으로 요청과 함께 id번호를 추가할 것이고 텀블러 서버를 통해 보내질 것이다. 이제 텀블러 서버는 당신 브라우저에서 오는 요청과 아이디 번호를 볼것이고 "아 이건 데이빗으로부터 온 요청이구나' 하고 미리 알게 될 것이다.

 현재 인터넷은 완전하게 열려 있다. 그 연결은 다 저장 될 것이고, 정보는 단순한 텍스트로서 보내졌다. 이건 해커들이 인터넷을 통해 보내는 어떤 개인정보든 염탐 가능하게 한다. 하지만 안전한 웹사이트는 이것을 예방한다. 당신의 웹브라우저에 SSL(secure sockets layer)이라고 불리는 것을 사용하거나 그 후계자인 TLS(transport layer security)을 사용하는 보안된 채널들과 소통하게 요청함으로서. 당신은 ssl이나 tls를 당신 통신을 둘러싸고 있는 보안층이라고 생각할 수 있다. 스누핑과 탬퍼링으로 부터 보호하기 위한. ssl나 tls는 당신이 작은 자물쇠를 웹주소창의 https 옆에서 볼 수 있을때 유효하다. https(HyperTextTransferProtocolSecure)프로토콜은 당신의 http 요청들이 보안화되고 보호되되고 있다는 것을 보장한다. 웹사이트가 당신의 브라우저에 보안화된 연결에 참여할 것을 요청한다면 그건 먼저 웹사이트가 주장하는 진정한 id카드임을 인정하는 디지털 확인서를 제공한다. 디지털 증명서는 그게 믿을만한 단체라는 것이 보장된 증명기관에 의해 발행되는데 증명기관은 웹사이트의 신원을 확인하고 그들을 위한 증명서를 발행한다. 마치 정부가 주민카드나 여권을 발행할 수 있는 것처럼 말이다. 만약 웹사이트가 적절하게 발행된 디지털 확인 없이 보안 연결을 시도한다면 당신의 브라우저는 당신에게 경고할 것이다. 이것이 웹브라우징의 기초이다. 우리가 매일 보는 인터넷의 부분이다. 요약하자면 http와 dns는 html, 미디어 파일들이나 웹의 어떤 것이든지 그 송수신을 관리한다. 이게 가능하게 만드는 것은 그 아래에 정보를 작은 패킷단위로 쪼개고 전송하는 tcp/ip와 라우터 통신이 있다. 그 패킷들은 이진으로 구성되어 있거나 전선이나 광케이블, 무선네트워크등을 통해 물리적으로 보내지는 0과 1들의 결과이다. 운좋게도 인터넷의 한층이 어떻게 작동하는지 배웠다면 그것에 대한 모든 세부내용을 기억하는 것 없이도 그 것에 의존할 수 있다. 그리고 우리는 그 층들이 함께 작동하고 성공적으로 규모에 맞게, 신뢰성있는 정보전달을 한다는 것을 믿을 수 있다.

6. 암호화와 공공키

암호작성술은 인터넷상에서 우리의 통신을 안전하게 지켜주는 것이라고 할 수 있다. 이 짦은 비디오에서 당신은 기초 암호작성술, ssl/tls, 그리고 그들이 어떻게  인터넷 통신을 안전하게 만드는지에 대해 배울것이다.

안녕하세요 제이름은 미아 길 에프너고 uc버클리에서 컴퓨터 과학을 전공하고 있습니다. 그리고 저는 국방부가 정보들을 안전하게 보호하는 것을 돕고 있습니다. 인터넷은 개방적이고 공공적인 시스템 이다. 우리는 항상 정보들을 공유된 선 과 연결등을 통해 송수신 하고 있다. 개방된 시스템이지만 우리는 여전이 많은 량의 개인 정보들을 다루고 있다. 신용 카드 번호나 은행 정보, 암호, 이메일등 같은 것 말이다. 그래서 이런 개인 정보들은 어떻게 계속 비밀로 유지 되는가? 어떠한 종류의 데이터든 원 정보를 섞거나 바꾸는 식의 암호화를 통해 계속해서 비밀로 유지 될 수 있다. 암호해독은 메시지를 올바르게 정렬하고 읽을 수 있게 만드는 과정이다. 이건 그냥 간단한 아이디어이고 몇새기간 사람들이 해온 방식이다. 가장 먼저 잘 알려진 것중에 하나는 시저의 사이퍼 이다. 시저는 로마의 장군이였는데 그는 메시지가 가로채지는 것을 대비해서 그들의 군사명령을 암호화했다. 시저의 사이퍼는 알고리즘이다. 원 메시지에 있는 각각의 알파벳들을 송수신자만 알고 있는 특정한 숫자의 단계를 더해 바꾸는. 그리고 이런 특정한 숫자들은 키라고 불렸었다. 키는 독자가 비밀 메시지를 해독할 수 있게 해준다. 예를들어 만약 당신의 원 메시지가 헬로 였다면 키5를 사용하는 시저 사이퍼 알고리즘으로 암호화된 메시지는 mjqqt가 될 것이다. 이 메시지를 해독하기 위해 수신자는 키를 단순히 반대로(그러니까 -5로) 적용할 것이다. 하지만 시저의 암호는 큰 문제가 있다. 누구든  사용가능한 모든 키들을 하나씩 적용해보며 쉽게 메시지를 해독하거나 부술 수 있다는 데에 있다. 그리고 영어 알파벳에는 26개의 문자 밖에 없는데, 이는 가장 많아봤자 26개의 키만 시도해보면 된다는 뜻이다. 그렇게 어렵지 않다. 아마 대략 한시간에서 두시간 정도 걸릴 것이다. 그럼 같은 량을 각 문자에 더하는 대신 각 문자를 다른량의 숫자들만큼만 움직여보자. 이 예에서 10개의 숫자를 가진 키는 각각의 연속된 문자에서 더 긴 문자를 암호화 할 수 있게 바뀔 것이다. 이렇게 된 숫자를 예측하는 것은 매우 힘들다. 10개의 10진 암호를 쓴다는 것은 100억개의 가능 키 솔루션이 있다는 것을 뜻한다. 분명히 이건 어떤 인간이 평생 풀 수 있는 것보다도 많은 양이다. 아마 몇세기가 걸릴지도 모른다. 하지만 현재의 컴퓨터들은 100억개의 가능성들을 다 시도해보는데 몇초면 충분하다. 그래서 현대 세계에 나쁜 놈들은 연필대신 컴퓨터로 무장돼 있다. 메시지들을 어떻게 안전히 암호화해서 깨부수기 너무 어렵게 만들 수 있을까. 여기서 너무 어렵다는건 적당한 시간안에 계산하기에 너무 많은 가능성이 존재한다는 것을 의미한다. 오늘날의 안전한 통신은 256개의 키를 이용해 암호화 되고, 이건 당신의 메시지를 가로챈 나쁜놈의 컴퓨터가 이 가능한 모든 옵션들을 키가 발견되고 암호가 해독되기 전까지 시도해봐야한다는 것을 의미한다. 만약 당신이 십만개의 슈퍼컴퓨터를 가지고 각각의 컴퓨터들이 매초 백만 십억개의 키를 실행해볼 수 있다고 해도 모든 가능 옵션들을 시도해보기까지 조의 조의 조 년이 걸릴 것이다. 그냥 256비트 암호화가된 단순한 메시지 하나를 번역하는데 말이다.
물론 컴퓨터 칩은 매년 반 사이즈에서 두배 빨라지곤 한다. 만약 이 지수적 성장이 계속된다면 현재에 불가능한 암호들도 몇백년 지나지 않아 안전하지 않게 될 것이다. 사실 우리는 이미 증가하는 컴퓨터속도에 맞춰 표준 키 길이를 늘려와야 했다. 좋은 뉴스는 더 긴 키를 사용한다고 메시지를 암호화하는게 엄청나게 어려워지진 않는다. 단지 나쁜놈들이 암호를 깨부수기 위한 선택지들이 기하급수적으로 늘어날 뿐. 만약 송신자와 수신자가 섞든지 섞은걸 환원하든지 같은 키를 공유하고 있다면 대칭 암호화라고 불린다. 시저의 암호같이 말이다. 암호키는 두 사람 간에 개인적으로 먼저 협의 돼야 한다. 그래서 사람들에게 좋은 방식이다. 하지만 인터넷은 열려있고, 공공성을 띈다. 그래서 아마 서로 개인적으로 만나 비밀키에 대해 합의하고 동의하는 것은 쉽지 않다. 그래서 컴퓨터는 이럴때 비대칭 키를 사용한다. 공공키는 누구에게나 공유될 수 있지만 개인키의 경우에 대해선 공유가능하지 않다. 공공키는 문서를 암호화하는데 사용되고 누구나 비밀 메시지를 만드는데 사용할 수 있다. 하지만 비밀해독은 오직 개인 키에 접근 가능한 컴퓨터에 의해서만 가능하다. 이게 어떻게 작동하는지는 우리가 당장 배우지는 않을 거지만 수학에 의해서 가능하다. 대신 이렇게 생각해보자. 당신이 누구나 메일을 저장할 수 있지만 저장하기 위해서는 키가 필요한 개인 메일 함을 가지고 있다고 생각해보자. 이제 당신은 많은 복사키를 만들어 하나를 친구에게 보내거나 심지어 아에 공공적으로 이용가능하게 만들 수도 있다. 당신의 친구나 정말 모르는 사람조차도 당신의 메일함에 키를 사용해 편지들을 넣을 수 있다.. 하지만 메일함을 열어 비밀 편지들을 확인 할 수 있는 것은 개인키를 가진 당신 뿐이다. 그리고 당신은 보안된 메시지를 공공키를 이용해 당신 친구의 메시지함에 넣을 수 있다. 이 방식으로 사람들은 보안된 메시지들을 개인키에 대한 필요 없이 교환 할 수 있고 공공키 암호제작술은 개방된 인터넷안의 보안된 메시지들의 기초이다.
우리가 웹브라우징을 할때 우리를 보호하는 ssl과 tsl로 알려진 보안 프로토콜을 포함해서. 당신의 컴퓨터는 이것을 오늘날 사용하고 있기 때문에 당신은 언제라도 주소창 옆의 작은 자물쇠나 주소창의 https를 볼 수 있다. 이건 당신의 컴퓨터가 당신이 접속해있는 웹사이트와 안전한 데이터 교환을 위해 공공키 암호화를 사용하고 있다는 것을 의미한다. 점점 더 많은 사람들이 인터넷에 접근하고 있기 때문에 점점 더 많은 데이터들이 전송될 것이고 이 데이터들을 보안화 하려는 시도는 계속해서 중요하게될 것이다. 그리고 컴퓨터는 계속해서 빠르고 빨라지고 있기 때문에 우리는 새로운 방식의 깨기에는 너무 어려운 암호화 기술을 개발 해야할 것이다.이게 내 일을 위해 하고 있는 것이고 이건 언제나 바뀌고 있다.

7.사이버 보안과 범죄

이 비디오에서 사이버 보안의 기초와 일반적 사이버 범죄들에 대해 배울 것이다.

안녕 내이름은 제니 마틴이고 시만텍에서 보안 담당책임자로 있다. 오늘날 사이버 범죄는 사회에 개인적으로, 금전적으로, 더나아가 국가 보안적으로 엄청나게 큰 문제를 불러 일으키고 있다. 단지 지난 몇년간 수억에 달하는 신용카드 번호들이 훔쳐졌고 수천만에 달하는 사회 보안 번호와 건강기록들이 위태로워졌다. 심지어 핵 원심분리기마저도 해킹됐다. 그리고 무선 공중드론도 통제권을 뺏기곤 했다. 이건 모두 하드웨어와 소프트웨어 취약점들을 이용하거나 더 자주 소프트웨어를 사용하는 사람들이 무심코한 결정들에 의해 이루어졌다. 이 사이버 범죄를 저지르는 사람들은 하나의 프로필이나 동기로 정의될 수 없다. 이건 국제적 테러리스트가 될 수 있고 잘난체하려고 경쟁하는 10대가 될 수도 있다. 오늘날 거대한 국가들은 정규군만 가지고 있는게 아니라 잘 무장된 사이버 군대를 가지고 있다. 사실 다음시대의 세계전쟁은 재래전이 아니라 컴퓨터를 사용해 국가적 수도나 에너지망, 교통수단 시스템을  차단하는  사이버전이 될 수도 있다. 

 안녕 내이름은 파리사이고 구글의 보안 princess이다. 나는 매우 많은 서로 다른 제품들을 위해 일해봤고 우리 소프트웨어가 가능한한 가장 보안성 있을 수 있게, 다른 방식으로 일해봤다. 사이버 범죄가 그 수면 아래에서 어떻게 일어나는지 함꼐 살펴보자. 소프트웨어 바이러스, dos공격, 피싱사기 등에 대해 공부할것이다. 생명과 생활에 있어바이러스는 기침과 재채기, 물리적 접촉으로 인해 전파되는 유기체이다. 바이러스들은 세포를 감염시키거나 그들의 유전물질을 주입하고, 그 세포를 복제하는데 사용한다. 이건 사람들을 정말 아프게 만들고 다른 사람들에게 전파되게 만든다.
컴퓨터 바이러스 또한 비슷하게 작동한다. 바이러스는 대게 무심코 설치되게 사용자와 컴퓨터에 해를 입힐수도 있는 실행할 수 있는 프로그램이다. 바이러스가 그자체를 다른 컴퓨터에 퍼트리는 것 역시 가능하다. 그래서 바이러스는 어떻게 당신의 컴퓨터에 애당초 침입 할 수 있는가? 공격자가 누군가의 컴퓨터를 감염시키는데는 두가지 방법이 있다. 그들은 아마 프로그램의 목적을 속여 희생자가 프로그램을 설치하도록 꾈 것이고, 예를들어 많은 량의 바이러스가 보안 업데이트로 위장한다. 당신컴퓨터 속의 소프트웨어가 취약점을 가지고 있어서(보안 백도어) 공격자가 별도의 분명한 허락에 대한 필요 없이 그 스스로 설치하게 하는 것도 가능하다. 바이러스가 당신의 컴퓨터위에 있을때 바이러스는 당신의 파일을 삭제하거나 훔치는 것, 다른 프로그램들을 조종하는 것 심지어 당신의 컴퓨터가 다른 누군가에게 원격 조종받을 수 있도록 하는 것 이 가능하다. 해커는 컴퓨터 바이러스를 사용함으로써 전세계 수백만의 컴퓨터를 지배할 수 있고 웹사이트를 공격하거나 무너트리기 위해 흔히 봇넷으로 알려진 디지털 군대 처럼 사용할 수도 있다. 이러한 종류의 공격은 DDOS(distributed denial of service)라고 불린다. 서비스 거부는 해커들이 너무많은 요청으로 웹사이트들을 압도하는 것이다. 만약 다량의 컴퓨터에서 한꺼번에 공격이 온다면 우리는 이걸 분산서비스거부 공격이라고 부른다. 대부분의 웹사이트들은 하루에 수백만의 요청들에 응답할 준비가 돼 있다. 하지만 만약 다른 공간에서오는 수십억이나 수조의 요청으로 때린다면 컴퓨터는 과부화될것이고 응답하는 것을 멈출 것이다. 사이버 범죄에서 사용되는 다른 수법은 사람들을 속여 민감한 개인 정보를 공유하게 하기 위해 많은량의 스펨 이메일을 보내는 것이다. 이건 피싱 스캠이라 불린다. 피싱스캠은  당신이 계정에 로그인 할 것을 요청하는 믿을만한 것처럼 보이는 이메일보낸다. 하지만 이메일을 클릭하는 것은 당신을 사칭 사이트로 데리고 간다. 당신이 어쨌든간 로그인 한다면 당신은 비밀번호를 주도록 사기당한 것이다. 해커는 이제 당신의 진짜 계정에 접근하기 위해 로그인 크레덴셜을 사용할 것이고, 정보를 훔쳐낸다거나 심지어 돈까지 훔칠 수도 있다. 운좋게도 많은 회사와 법, 정보들이 인터넷을 안전하게 하기위해 노력하고 있다. 하지만 이런 노력들은 충분하지 않다. 만약 컴퓨터 시스템이 해킹된다면 당신은 아마 문제가 보안 설계나 보안 소프트웨어의 문제라고 생각할 것이다. 하지만 시스템이 해킹되었던 90퍼센트의 사례는 보안 버그의 문제가 아니라 인간에 의해 만들어진 단순한 실수때문이였다. 우리 모두가 스스로를 보호하기 위해 취할 수 있는 조치들이 있음이 밝혀졌다. 자주 당신의 행동은 당슨이 소유한 자료와 컴퓨터에만 영향을 주는 것이 아니라 당신의 학교, 직장, 가정 안의 모든 사람의 보안에 영향을 줄 수 있다. 수십억에서 수조 달러가 걸려있는 사이버 범죄는 매년 똑똑해지고 우리 모두는 그에 대처해야한다.