HTTP Crash Course & Exploration
Src=https://www.youtube.com/watch?v=iYM2zFP3Zn0

 이 영상은 devmountain에 의해 지원 되었다. 만약 웹 개발, iOS ,ux디자인에 관심이 있다면 devmountain은 당신이 정규직으로 이 산업에서 일할 수 있는 걸 목표로하는  12주과정의 설계 개발 부트캠프이다. 더 배우고 싶다면 devmountain.com에 방문하거나 아래설명에 있는 링크를 클릭해라. 이비디오에서 나는 평소 충분히 잘 이야기 되지 않는 것에 대해 이야기 해볼 것이다. http프로토콜 말이다. 우리가 웹개발자로서 항상 함께 일하는 것이다. 그리고 너가 백엔드든 풀스택이든 아니면 프론트엔드든 http와 전체적 요청응답 사이클을 이해하는 것은 매우 중요하다. 그래서 이 비디오에서는 어떻게 이것이 작동하는 지와 우리는 다른 유형의 응답들을 알아볼 것이다. 메소드, 상태코드, 당신이 요청을 할떄 서버로부터 되돌려 받는 것들 그리고 우리는 조금의 슬라이드들을 겪을 것이고, 나는 이 일부를 노드.js와 express를 포스트맨(http클라이언트이다)과 함꼐 테스트 해볼 것이다. 그리고 나는 익스프레스가 당신에게 http가 어떻게 작동할 것인지 예를 주는 훌륭한 프레임 워크라고 생각한다. 왜냐하면 이건 모든 것을 스스로 다뤄보고 미니멀하며, 우리는 그걸 고수준 프레임워크에서 그러는 것처럼 추상화한다기보다는 요청과 응답을 직접 다룬다. 그래서 만약 너가 익스프레스나 노드와 친숙하지 않더라도, 괜찮다. 우리는 특정한 프레임 워크나 언어에 집중하는 것이 아니다.

 그래서 이제 http가 무엇인지 이야기 해보자. http는 hyper text transfer protocol 로서 기본적으로 웹서버와 클라이언트간 통신을 담당한다. 이건 웹 프로토콜이다. 그래서 웹브라우저나 웹페이지에 방문, 폼을 제출하거나, 일종의 에이젝스응답를 보내는 버튼을 클릭하거나, 그런 응답을 가져오는 매순간마다, 당신은 http를 사용할 것이고 응답과 반응 사이클이라고 불리는 것들을 겪을 것이다. 당신은 요청을 보내고 헤더나 본문이라고 불리는 응답을 되돌려 받는다. 이제 이 사이클을 좀 더 자세히 들여다볼 것이다.

 Http가 무상태라는 것을 이해하는 것은 매우 중요하다. 무상태는 모든 요청이 완벽하게 독립적이라는 것을 의미한다. 당신이 웹페이지를 방문하는 하나의 요청을 만들거나, 이후에 다른 페이지로 갈때, 페이지를 리로드할떄든 이전의 트랜잭션에 대해 아무것도 기억하지 않는다. 각각의 트랜잭션을 하나의 트랜잭션으로만 바라본다. 우리가 예를들어 로그인 데이타를 유지하고 더 강화된 유저 체험(프로그래밍, 로컬 저장, 쿠키, 세션 등과 같은 것)들을 제공하기 위해 위해 이용할 수 있는 다른 것도 있다. 
하지만 http의 핵심에는 단지 무상태가 있다는 것을 알아라.