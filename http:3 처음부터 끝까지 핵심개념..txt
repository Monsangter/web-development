Src = https://www.smashingmagazine.com/2021/08/http3-core-concepts-part1/
http/3 from A to Z: core concepts 

1. 빠른 요약. 

 거의 5년이란 시간동안의 개발 끝에 새로운 http/3 프로토콜이 최종단계에 근접했다. 최종단계의 반복들은 실험적 기능으로서 이미 사용 가능했다, 하지만 /3의 가용성과 사용이 2021년에 걸쳐 증가할 것이라는 걸 예측 할 수 있다. 그래서 /3은 정확히 무엇인가? 왜 /2가 나온지 얼마 안되어 필요되었는가? 어떻게 사용되고 사용해야하는가? 그리고 이건 어떻게 웹 성능을 증가시키는가? 알아보자.

2. 본문

 당신은 아마 이 토픽에대해 이야기하는 블로그 포스트나 컨퍼런스토크를 들었고 그 답을 알고 있다고 생각할지 모른다. 당신은 아마 이런 이야기를 들었을 것이다. /3은 /2에 비해 패킷손실이 있을때 훨씬 빠르다, "/3 연결은 더 낮은 응답시간을 가지고 있으며 준비되는데 더 적은 시간이 든다" 그리고 아마 "/3은 데이터를 더 빠르게 보내며, 리소스들을 더 병렬적으로 보낸다"라는 말들을 들었을 것이다.

 이런 설명과 기사는 일반적으로 중요한 기술적 세부사항을 생략했으며, 미묘한 뉘앙스가 부족하다. 그리고 대개 부분적으로만 맞다. 그들은 자주 /3을 성능적 혁명으로 만들고는 한다. 그러나 이것은 정말 요란하지 않은 수수한(그러나 여전히 유용하다) 진화이다. 이러한 것들은 대게 새로운 프로토콜들이 실전에서 그들의 높은 기대에 부응하지 못할 것이기 때문에 위험하다고할 수 있다. 나는 이게 많은 사람들을 결국 실망으로 이끌고, 입문자들에게 맹목적으로 잘못된 오류정보들의 더미로 이끌까봐 두렵다.

 이러한 것들은 /2에서 일어났고 우리가 봐온 것들이다. 그것은 서버푸쉬, 병렬 스트림, 우선순위와 같은 흥미로운 새기능을 갖춘 정말 위대한 성능적 혁명으로 사람들에게 소개 됐다. 우리는 자원 번들링을 멈출 수 있었고 우리 자원이 다수의 서버에 샤딩되는 것을 중단하며 페이지 로딩 과정을 엄청나게 간소화 할 수 있을 것이였다. 아마 스위치를 한번 누르면 마법같이 50퍼센트나 빨라질 것이다.

 5년이 지난후 우리는 서버 푸쉬가 실전에서 전혀 동작하지 않고, 스트림및 우선순위는 정말 자주 썩게 구현된다. 그래서 결과적으로 (감소된) 리소스 번들링, 심지어 샤딩 또한 몇몇 상황에서 상당히 좋은 방법이다.

마찬가지로 프리로드 힌트같은 프로토콜 행동을 수정하는 메커니즘들은 자주 숨겨진 깊이와 버그들을 포함하고 그것들이 올바르게 사용되기 어렵게한다.

이와같이 나는 이러한 형태의 잘못된 정보와 비현실적기대들이 /3에대해 퍼지는 것을 막는 것은 중요하다고 생각한다.

이 문서 시리즈 에서 나는 더 많은 뉘앙스를 가지고 특히 그 성능 기능들, 새로운 프로토콜에 대해 말할 것이다. /3이 참 전망 좋은 새 개념들을 포함하고는 있지만 슬프게도 대부분의 웹페이지와 유저들에게 상대적으로 그 영향이 제한된다는 것을 보여줄 것이다. /3를 설정하고 사용하는 것은 매우 어려운 일이므로, 새로운 프로토콜을 구성할때 주의 하도록하자.

 -파트 1: /3의 역사와 핵심 개념
 이 글은 /3과 일반적 프로토콜에 처음인 사람을 타겟으로 했다. 그리고 이것은 주로 기초를 다룰 것이다.

 -파트 2:/3의 성능 기능들
 이것은 좀더 깊이있고 기술적이다. 이미 그 기초를 알고 있다면 여기서부터 시작해도 된다.

 -3파트 3: 실용적인 /3 배포 옵션
 이 시리즈의 세번쨰 글에서는 http/3를 자기 손으로 배포하고 테스트하는데 관련된 문제들을 다룬다.

주의사항: 이 시리즈들은 반드시 깊은 프로토콜 지식을 필요로하지 않거나 더 배우고 싶지 않은 사람들을 타겟으로 잡고 있다. 그러나 충분히 많은 기술적 세부사항들을 다루고 있으며 고급 독자 또한 흥미를 가질만한 외부 소스에 대해 많은 링크들을 가지고 있다.

3. 우리는 왜 /3를 필요로 하는가? 내가 가장 많이 직면하는 질문은 "/2가 2015 표준화됐고 나온지 얼마되지도 않았는데 왜 우리는 /3을 필요로 하는가?