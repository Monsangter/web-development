Src = https://www.udemy.com/course/linux-command-line-colt/learn/lecture/30360870?components=add_to_cart%2Cavailable_coupons%2Cbuy_button%2Cbuy_for_team%2Ccacheable_buy_button%2Ccacheable_deal_badge%2Ccacheable_discount_expiration%2Ccacheable_price_text%2Ccacheable_purchase_text%2Ccurated_for_ufb_notice_context%2Cdeal_badge%2Cdiscount_expiration%2Cgift_this_course%2Cincentives%2Cinstructor_links%2Clifetime_access_context%2Cmoney_back_guarantee%2Cprice_text%2Cpurchase_tabs_context%2Cpurchase%2Crecommendation%2Credeem_coupon%2Csidebar_container%2Cpurchase_body_container#overview

섹션 1 빠른코스 오리엔테이션

	1-1 환영함

커멘드라인이 배우기 어렵따는 편견이 잇는데 사실이아님.
포기하지 말고 익혀 보세요. 파워 유저가돼 보세요. 참여를 많이 할 수 있어요.
많은 개념과 명령어를 배울 수잇어요. 심도잇는 이해를 할 수잇어요. 나무를 볼수도 숲을 볼 수도 잇는 강의~
Broad and narrow~

	1-2 커맨드라인 배우는 이유

구닥다리 같지만 깊은 곳을 다를 수 잇어요. 더 많이 할 수 있어요. 구이나 쿠이나 다 비슷한 것 같지만 쿠이에서만 할 수 잇는것도 잇어요.
서버 시작이나, 프로세스 관리, 숨긴파일다루기, 데이터 베이스 사용, 권한 변경 등 못생겼어도 엄청 많은 걸 할 수 잇삼. 익숙해지면 더 빠름. 하지만 모든 운영체제에 같은 명령어가 적용되는건 아님. 그래도 약간 작업해주면 윈도 기기에서도 동작 가능. 개발자 데이터 사이언티스트 등 사용할 툴의 많은 것이 명령줄에서 자동할 것이다. 클라우드 컴퓨터 같은것도 대부분 사용하고 설정하기 위해 커맨드라인 사용함.

	1-3 슬라이드와 실습 찾기

	1-4 조언한마디
암기하지마세요, 그냥 연습하세요. 자연스럽게 외우세요. 만일 몇달이 지났는데도 기억하지 못한다면 안쓰이는거에요, 필요할때 그 명령어들을 쉽게 찾을 수 잇는 것에 집중하세요.
메모장이됐건 포스트잇이 됏건 잘 찾을 수 잇게 하삼. 정보가너무 많아서 다 못외움.

==========================

섹션 2 소개

	2-1 운영체제
하나의 기기만을 위한 운영체제도 잇음. 닌텐도 위같이
윈도우 nt에서 시작된 운영체제 그룹들이 있음. 엑스박스라던지
쨋든 크게 두가지로 분류할 수 잇음. 유닉스 계열과 마이크로 소프트계열
같은 계열은 커맨드도 공유할 수 잇삼.
https://eylenburg.github.io/os_familytree.htm 운영체제 계보

	2-2 유닉스와 유닉스 계열
유닉스란 몰까 1960중반 벨연구소에서 개발. 그래서 아직도 맥이든 우분투든 같이 공유하는 명령어가 잇음.
다중유저운영체제라든지(다수유저가 한컴퓨터 접속) 계층적 파일 시스템. 폴더나 디렉토리 만들어가기. 등.

사람들이 흔히 말하곤 하는 유닉스의 철학이라는 것은 소프트웨어를 모듈화 시키는 거임. 

현대 유닉스는 상표이며 the open consothium에서 관리하고 있음.

단일 유닉스 규격이라고 하는 표준문서가 잇어서 유닉스 이름을 쓰기위해 필요한 조건이 잇음.

만약 이 기준대로 만들면 유닉스인증 받을 자격이 있는지 테스트함.

맥 osx도 한 10년 전쯤에 이 비싼과정을 거쳐 유닉스로 인정받음. 표준을 만족하지만 인증 안받은건 유닉스 계열이라 불림. 유닉스 이름 사용 못하나 계열에 속하는 것.

명령과 그 개념은 모든 종류 유닉스에서 통함.

리눅스는 유닉스는 아니지만 유사유닉스임

	2-3 원조 유닉스 매뉴얼 살펴보기
https://www.bell-labs.com/usr/dmr/www/1stEdman.html
여기 고대 유닉스 메뉴얼있는데 천공카드 같은거 다루는 명령어랑 신택스도 잇음. 근데 현재는 사용안되는 과거 유물들 많음.
글고 50년전엔 한줄짜리 매뉴얼이엿던 명령어가 지금은 개 긴 명령어도 잇음 대표적으로 find

	2-4 리눅스, GNU, 커널

		역사
1980 자유 소프트웨어 운동시작. 독자 규격을 사용하거나 과한 사용료 요구에 맞선 운동. 사용자 억압에 맞서 표현의 자유를 위한 운동. 
소프트 웨어로 할 수 있는 것을 제한하려 하자 나타난 운동. 
		그누
자유 소프트웨어가 아니었던 유닉스 기능들을 모두 가지고 호환되는 자유 소프트 웨어를 새로 만든 것이다.
		리눅스 커널
리누스 토르발즈가 연구하던 커널인데 딱 자유소프트웨어에, 취지랑 잘 맞아 떨어졌음. 
		커널
운영체제는 아니나 그 핵심요소임. 소프트웨어와 하드웨어간 대화 촉진

		리눅스
커널 자체를 가리키도 하지만 동시에, 리눅스 운영체제를 구성하는 소프트웨어들을 가리키는 단어. 리눅스 이름엔 논란이 잇는데 리눅스 커널과 그누프로젝트의 작업이 합쳐진 결과 물이기 떄문임. 리눅스 자체는 커널이고 완성된 운영체제 아님. 보통 리눅스 사람들이 말하는건 리눅스 배포판인데, 리눅스 커널과 다양한 그누도구 공식문서 패키지 관리자가 잇음.

유닉스 운영체제가 오픈소스라고해도 그 안 산출물들은 전부 closed된 경우가 많은 상태에서 90년대 리눅스가 나온 거임

	2-5 터미널, 쉘, bash 살펴보기

		쉘
운영체제의 인터 페이스가 되는 시스템. 쉘이 커널을 달팽이 껍질처럼 감싸고 잇어서 쉘이라는 이름이 부음.

		터미널

옛날엔 대학이나 기관에서 방하나를 차지하는 큰 컴퓨터에 단 하나의 시스템을 가지고 있었고, 캠퍼스 도서관에 터미널이 있는 형태였음.
그리고 각 터미널은 하나의 컴퓨터에 접근하는 것이였으며, 하나의 물리적 체계 였음. 지금은 소프트웨어 적 터미널임. 운영체제는 기본적으로 터미널 내장하나 따로 다운할 수도 잇음. 쉘을 실행 시키는 어플임. 터미널에 명령어를 치면 쉘이 운영체제로 보냄. 
중간자 역할을 하는 것으로 터미널에서 쉘, 쉘은 그명령어를 운영체제로. 좀더 복잡한데 그냥 그렇다는거임 간단하게 보면. 

		배쉬
배쉬 쉘의 조상 쉘의 책임자의 이름을 따 bourne-again쉘이라고 만듬. 가장 인기 잇는 쉘이며 거의 모둔 유닉스 계열 운영체제에서 동작함.

	2-6 설치로 넘어가보자. 
우분투는 그래픽 사용자 인터페이스도 있는 완전한 운영체제임. 터미널만 있는게 아니라 완전한 운영체제임. 근데 대부분은 맥터미널에도 작동함. 윈도우 파워쉘에서는 같은 명령어를 쓰지 않기 떄문에 설치가 좀 더 힘들 수도 있음. 그래서 우분투를 실행할 수 있또록 가상 머신을 하나 마련해야한다. 맥사용중이라면 두 옵션에 대한 설명이 강의 끝에 잇음. 윈도라면 가상머신 설정하는 법을 확인하면 됨. 

=======

	3-1 섹션에서 기억해야할 것.
깊게 다루긴할건데 다 외워야되는건 아님. 트렐로 보드가 있는데 nice to have useful important 등으로 분류해주겟음.
이 섹션에서 중요한건 ncal, date 명령어보다 커맨드 구문 옵션 인자등이 더 중요하다. 즉 커맨드 기초 구조가 핵심이다 .

	3-2 터미널 열기

	터미널 여삼
	
	3-3 프롬프트
프롬프트는 쉘이뭔가를 입력받을 준비가 됏다는 뜻 ㅎ
clear치면 꺠끗해짐. 프롬프트를 멋지게 커스텀할 수도 잇음.
" 쿼테이션 마크 쓰고 치면 프롬프트 사라짐. 다음 쿼테이션 마크로 닫아질때까지 한 명령어로 치는 거임.

	3-4 첫명령어 사용하기

date 명령어. 현재 시간 출력함. 만약 스크립트 같은 걸 작성해 현재날짜를 조합하려하면 도움될 수도?
명령어들 케이스 센시티브함. 우분투 쓰면 명령어 틀렸다고 하면서 원래 치려던게 뭐였을지 추측도 해줌.
맥터미널은 가끔 대소문자 구분 안함. 근데 또 전부 안 하는 건 아님. 명바명. 그니까 걍 케이스 신경쓰삼

ncal 명령어. 뉴캘린더. 현 월의 달력을 세로형으로 출력 cal은 가로형임 

	3-5 터미널에서 방향키 사용하기
좌우 키는 커서 왼쪽 오른쪽으로 이동 가능함. 위아래키는 아에 다름. 전에 입력했던 커맨드들을 순회하는 역할을함!

	3-6 명령줄 인자
커맨드에 띄어쓰기로 인자. 매개변수 또는 피연산자를 구분해 줄 수 잇삼 clear같이 아무 인자 요구않는 커맨드도 잇음.
echo ~ 커맨드. ~ 반환
ncal M Y 해당 날짜에 해당하는 달력반환. 
sort 파일명 해당 파일의 내용들을 정렬해줌.
rm 파일명 파일 하나 혹은 여러개를 제거 함.
컨트롤 c하면 명령어 빠져나올 수 잇음.
특정한 명령어나 인자가 아닌, 그 패턴. 그러니까 공백이라는 형식을 잘 봐주세여.

	3-7 옵션
옵션으로 명령어 동작방식을 바꿀 수 잇음. 옵션을 줄떄는 항상 -를 붙입니다. 해ㄷ암기하지마세요 중요하지 않아요 패턴에 집중하세요.
ncal 하면 디폴트가 현재 날짜에 하이라이트 해주는건데, -h하면 하이라이트 안해줌. 
옵션 자체도 명령어와 같이 대소문자 구분함. -j하면 줄리우스력으로 날짜 표시함. -M 은 먼데이를 주의 시작으로 함.
맥에서는 동작 안함.
-3 하면 전달 현달 담달 달력 볼 수 잇음.
구체적인 옵션 외우는 거는 신경 안씀. 옵션이 -로 시작한다는 형식과 동작을 바꿀 수 잇다는 것 만 알아두삼
사실 극히 일부 옵션에 대해서만 지원함.


	3-8 여러옵션 묶어 쓰기 
cal -3 -j 이렇게 한꺼번에 여러 옵션 적용할 수도 있음
ncal -3jMh 이렇게 줄여서 여러 옵션 적용할 수도 있음.

	3-9 긴 형태 옵션 사용하기
-- 사용 하면 줄임말 옵션이 아니라 하나의 영어단어로 된 옵션을 쓸 수 있음. 결과는 같음. date -u , date --universal
date -universal 이렇게 치면 un이런식으로 옵션 축약형인줄알고 잘못 받아들임.

sort -r color.txt, sort --reverse color.txt 
-u , --unique 정렬중 중복된건 제거하고 출력.
sort -ru
date -u 세계표준시기준 시간 표시.

	3-10 매개변수를 필요로 하는 옵션
ncal -A 3 
-A옵션은 출력해야하는 해당 월 다음으로 몇개월을 더 추가해 표시해야하는지임.
-B옵션은 그 반대

ncal -A3 -B3 이렇게 공백없이도 칠 수 있음.
ncal -A3 -B3 June 1998
ncal -A3 -B3M 
ncal -A3 -B3 -M 옵션이 매개변수랑 공백없이 적혀있을때는 M을 따로 적어줘야함. 옵션과 인자의 순서는 상관 없음. 그래도 옵션을 인자 앞에 넣어주는게 일반적임. 꼭 그래야할 때도 잇음.

=======
	appendix 설치해보기 애플
두옵션중 하나만 썰치하면댐.  맥에서는 사실 설치안해도 이 과정에서 실행할 커맨드의 98퍼센트가 동작함. 이미 개발자고 맥 써야할 이유가 잇으면 걍 깔지 말고 쓰삼. 하지만 이 비디오에서 하는 것과 가장 유사하게 경험하고 싶고 시각적으로 똑같고 싶으면 가상머신으로 우분투 설치하삼. 맥이랑 폴더구조도 약간만 다르고 똑같음. 하지만 최근 맥의 디폴트 쉘은 zsh인데 bash로 바꾸는 걸 추천함.

echo $SHELL 치면 우리 쉘의 이름 알려줌.  chsh -s /bin/bash 치면 암호치고 다운가능.

맥 개발자나 데이터 과학자라면 모든 워크플로우가 설정 돼있을텐데 가상머신 설치하면서까지 버리진 않을 거임. 근데 처음부터 하고 싶다면 이건 좋은 옵션이 될거임. 
	appendix 설치해보기 윈도우
윈도우는 파워셸이 기본 내장임. 어두운 배경에 터미널 하나 있으니까, 진지한 개발자라면 컴퓨터 안에 컴퓨터가 또있는게 대형프로젝트에 부담일 수 잇음. wsl로 리눅스 커널 접근 가능. 별도 그래픽 사용자가 없음. 그냥 윈도환경에 통합 되어 있음. 초보자 친화적이진 않지만 하고 싶으면 도전해보셈.
가상머신 깔고 우분투 까삼 lts. 먼저 가상머신 까삼. 가상머신으로 가상 장치 할당할 수 잇음. 그 위에 우분투 설정하삼.