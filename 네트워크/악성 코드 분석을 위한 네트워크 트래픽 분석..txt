악성 코드 분석을 위한 네트워크 트래픽 분석.
src= https://www.inflearn.com/course/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8C%A8%ED%82%B7-%EB%B6%84%EC%84%9D-%EC%9E%85%EB%AC%B8-%EB%B0%8F-%EC%95%85%EC%84%B1%EC%BD%94%EB%93%9C-%EC%83%98%ED%94%8C-%EB%B6%84%EC%84%9D# 인프런 보안프로젝트

초~중급자를 위한강의.

네트워크 트래픽 분석과 악성코드 어떻게 연결할 수 있는지.
네트워크 기초부터 살펴봄~
실질적으로 필요한것~
네트워크를 실제로 패킷들로 분석
머리어 트래픽 분석을 위해서 사용 도구 튜터리얼
연습 샘플 분석
자바스크립트 난독화, 웹 클라이언트 사이드쪽에서 보통 쓰이는 언어임.dbd같은 공격등이 난독화와 함꼐 들오기도함 네트워크 트래픽에서 http타고 들오기더함
ek라고 익스프롤러 킷이 잇는데 여기서 난독화를 진행해줌 ek마다 난독화 방식 다르기 떔에 난해할 수 잇지만 어느정도 이후에 문맥을 파악할 수 잇을 정도로는 진행해줌. 실제 사례들을 들어가면서 어떻게 이런 자바스크립트 난독화와 와이어샤크 네트워크를 통해서 어떻게 사건이 진행 됏엇는지 또는 머래어가 어떻게 동작하는지를 네트워크라는 큰틀에서 악성코드도 크게 시스템 족에 파트가 있기때문에, 이번엔 네트워크에 촛점맞춰서 진행해봄.


1. 네트워크 트래픽 분석과 악성코드

네트워크 트래픽분석을통해 악성코드랑 어캐 연관대잇는지 분석해봄. 악성코드를 분석하는데 네트워크 트래픽이 왜 필요할까 악성코드도 네트워크가 발전함에 따라서 같이 발전하는 사례를 같이 역사를 볼수잇슴

옛날에는 네트워크가 발달안돼서 악성코드가 네트워크로 전파가 안댓음. 플로피 디스크나 다른 매체를 통해 전파가 됏다면 오늘날엔 초고상인터넷이 디폴트기 땜에 악성코드와 항상 연결돼 잇음.

군용 연구용으로 쓰이다 2000ㄴ년대 민간 상업용으로 전세계적 이용. 기술이 좋아지만 안정성 떨어짐. 한국이 네트워크 발달하긴햇는데 문제 생길수도잇는양상

01 악성코드 분석에 네트워크 트래픽이 필요할까

실질적으로 악성코드(실험적 자기복제코드)가 등장한 시점은 71년, 잠잠하다 86년부터 급격히 개체수와 종 증가. 이후 백신역사도 시작

총 악성코드 개수 지수적 상승. 신종출현은 수그러듬. 보급속도보다 몇년 늦음. 보급된후 몇년뒤 악성코드가 따라 는다는 말.

02 악성코드는 대부분 네트워크 트래픽을 타고 이동한다.

악성코드는 어떻게 네트워크 트래픽 타고 이동하나. 초창기 악성코드는 디스켓을 통해 이동 했으나 오늘날 악성코드는 인터넷 통해 전파.

 -1 브라우저를 통한 악코유포
 -2 불법크랙프로그램을 사용한 유포
 -3 피싱/파밍을 통한 유포
 -4 외부문서 매크로를 통한 유포.

03 네트워크 악성코드 실제 사례

 -1 브라우저 
 고전적임. 검색만으로도 유포되고, 특히 (힙취약점 이용)ie버전과 fláh취약점 조합으로 유포. 가끔 크롬을 통해서도 유포. 랜섬웨어가 이런 식으로 전파. 보안시스템 잇어도 연구해서 우회함. 계속 진화.
ie강이는 아니나 윈도 애플리케이션 취약점 분석이라는 강의도 잇음. (stack쪽 취약점 이용) 이 강의에서 취약점은 다루지 않는데 패킷이 어떻게 왓다갓다 하는지 정도는 다뤄보겟다.

 -2 불법 크랙 프로그램 사용
 웹하드, p2p,블로그 통해 유포. 공짜 좋아하는 불법 사용자 노리고 악성코드 같이 심어놈. 심지어 알고서도 실시간 감시기능 끄라고해서 끄는경우도잇음. trojan있을 확률 높음(몰래 로컬에 다운로드 받아놓음)

 -3 피싱 파밍을 통한 악성코드 유포.
 사용자를 속에 공격자가 임의로 만든 사이트에 접속하게 한뒤, 개인정보 입력하게하는 사회공학적 방법.
실제 페이스북측에서도 api를 잘만들어 제공하고 개인정보를 조금은 요구하기는 하는데, 아이디와 패스워드를 직접적으로 요구하지 않음. 패스워드도 해시로 저장함.

 -4 외부 문서 매크로 사용 
 이메일 등으로 스팸오는 문서를 보면 hwp,pdf,excel,word 첨부 일반 사용자의 경우 exe파일이나 zip파일만 경계하기도 하는데 매크로가 첨부된 파일일 수도 있음. 한글, pdf의 경우 취약점을 주로 이용하고, excel과 word의 경우 대부분 ms office에서 제공하는 매크로로 악성 코드 유포.

04 네트워크 분석이 악성코드분석에 미치는 영향.

 -1 악성코드의 정확한 행위 파악
	대부분의 악성코드가 네트워크 트래픽을 주로 사용(랜섬웨어 디도스 원격프로그램 조정, 트로젠 등) 디도스 공격을 위한 좀비 pc모으기, 특정 사용자 감시. 파일을 인질로 돈 요구하는 행위. 악성코드의 직접행위를 알아내기 위해서는 네트워크 트래픽 분석 필요. 
	악성코드가 시스템쪽에서 ollydbg나, 디버깅을 해서 파악가능한 부분이 있고 실질적으로 네트워크 트래픽이 필요한 부분도 있다. 네트워크 트래픽이 중간에 멈추면은 갑자기 진행이 안되는 경우도 있고 cnc서버가 살아있다면 주로 이런 cnc서버와의 통신을 통해서. 이런 네트워크 트래픽을 활용한다는거다. 없으면 임시방편으로 임의 서버 올려, 테스
	팅 하기도함.

 -2 악성코드 네트워크 흐름에서 탐지 및 차단

	ids장비등에서 네트워크 패킷을 감시하는데 필요.
	우리가 추출한 패턴에서 패턴이 abcd로가는 문자열로 흘러간다. 어디에서도 볼 수없던 패턴이다 하면은 ids장비에다 등록 해놓음. 오른보안 업체 가비아의 보안 장비 설치사례 보면 백본 - ngfirewall - waf -switch -servergorup
																				-(mirroring) IDS 
	백본에서 서버 그룹사이에 트래픽이 왔따갔따 하고 ids는 그중간에서 패킷을 미러링함. 패킷에 특정 문자열(악성코드 삽입)을 발견하면 위험알림.

05 네트워크 분석에 필요한 것들
 -네트워크 기초 이론 
  na나 np같은 공부도 해봣는데 불필요한거 뺴고  네트워크 기초이론부터 해서 진행할 예정이다. 

 -네트워크 프로토콜 구조와 이해
  이론적으로 헤더가 어떻게 생겨느니 같은 것도 살표본다. 근데 와이어 샤크로 실제 패킷확인도 해보겟음.

 -네트워크 분석 툴
  네트워크 관련해서 공부하면 시스코장비 같은거 다루는 방법 배우긴 하는데 네트워크 트래픽이 어떻게 왓다갓다하는지는 안배움. 이건 실제로 왔따갔다 하는 패킷이 어떤 역할을 하고 의미를 갖는지, 둘이 왓다갓다 하는걸 바이너리 형태로 보면 전혀 모름. 글키떔에 툴을 사용하면 자동화 되어서. 단순하게 분석 가능하다. 이런 툴에대한, 도구에 대한 이해를 해본다. 

 -실제 악성코드 트래픽 분석경험

전지해줄수잇는건 전지해주고 악성코드가 어떻게 전파되는지 확인하는 시간 갖겠다.

가장 중요한건 이론. 그 바탕으로 프로토콜 구조 이해. 다음으로 분석 툴. 나는 데이터 분석을 기초부터 다갈킴. 관련된 라이블러리 잇으면 다 알려줌. 다른데는 일케 안갈치고 넘파이 좀 배우고 텐서플로 좀 배우고 함. 근데 나는 넘파이, 냄블로비? 배움. 이거 배우고 판다스로 넘어가니까 편하다. 네트워크도 중복된 라이브러리를 쓰고 잇기떔에, 굉장히 편하다. 근데 요즘 과정들 보면 넘파이 냄블로비 다 뻄. 글고 판다만 갈킴. 그럼 텐서플로 못함. 뉴럴 어쩌고 해야대는대 못함. 다시 배워야함. 저랑 같이하면 안해도댐. 네트워크도 마찬가지로 네트워크 기초안하면 망함. 프로토콜 이해 못하고, 툴 사용못함. 사용은 할지못해도 확장은 못함. 그래서 기초부터 해야댐.분석툴 버그 많아서 기초부터 알고 잇어야 문제안생김 기초부터차근차근 ㄱ. 실제 악성코드는 변칙 변수 난무. 그래서 확장이 적용되지 않으면 문제 생김. 기초를 다 익히면 필없는데 모르면 듣고 위단계로 넘어가삼.

===========================

2. 네트 워크 기초

네트워크 분석이 아직 미숙 미흡하다 생각하면 들으삼

 01 osi 7layer 

 -1 데이터 통신 시스템
   -기본개념
컴퓨터랑 원거리에 있는 컴퓨터, 또는 다른 원거리에 있는 컴퓨터를 통신회선으로 결합해 정보처리하는 시스템.
중간에 라우터들이 잇을 수도 있겠고.. 웹페이지를 요청하면 서로 주고 받는다는 소리
메시지, 송신자,수신자,전송매체, 프로토콜 5가지 기본요소로 구성.

메시지 = 네이버 표시해줘. 송신자 =클라, 수신자 = 서버, 전송매체 = 라우터나 중개기들 ( 직사각형으로 생겨서 뭐 모아놓고 씀. 아파트 지하나 가보면 잇음), 프로토콜 = 규약 웹상에서 벌어지는 프로토콜을 http라는 규약으로 묶고 있는데, 네이버라는 어떤 회사에 웹페이지를 요청할때 get 인덱스 붙이고 호스트 붙이고 다양하게, .. 얘네를 헤더라고 부름. 글고 줄바꿈 두번하면 끝남. 이것 자체가 일종의 메시지가 댐. 응답도 규약이 있다. 정보를 보고서 형식에 맞게 전송해주니까 브라우저가 스크린에 표시하는거임.

   -구성요소 
데이타 다말장치 DTE(Data terminal Equipment) 송수신장치. 즉 단말기.
링크 프로토콜에 따라 행해지는 데이터 통신 제어기능을 갖추고 있는 단말장치나 주 컴퓨터

데이터 통신 장비 DCE(Data Communication Equipment) 
DTE와 전송로 사이에서 접속 설정, 유지, 해제, 부호-신호 변환을 위한장치

전송매체
메시지가 전달 되는 물리적 경로. 동축 케이플 트위스티드 페어(utp),광케이블 (내구성문제로 안에 묻혀잇음)

 -2 프로토콜
   -기본 개념
정보의 송 수신측. 또는 내트워크 내에서 약속된 규약이나 규범. 
중국인이랑 일본인이 서로 어캐 통신 하겟음. 그래서 프로토콜을 통해 통신함. 
연결과정, 통신회선 접속방식, 통신 회선을 통해 전달되는 정보 형태, 오류발생제어, 송/수신측 간 동기 방식등에 대한 약속

   -주요 요소
	-구문(신택스)
데이터의 형식(format)( http가 헤더 바디로 나눠져잇는것처럼), 부호화(coding) 신호레벨(signal level) 등이 어떤 구조와 순서로 표현.
	-의미(서멘틱)
각 비트가 갖는 의미, 보통 비트단위로 이야기하는 것들은 tcp나 udp 이런 것들이 잇음. 이진 비트에도 비트별로 의미가 잇는데
패턴에 대한 해석과 해석에 따른 전송제어, 오류수정등에 관한 제어 정보를 규정.
	-타이밍(타이밍)
두 개체간의 통신 속도를 조정하거나 메시지 전송시간 및 순서등에 대한 특성 조정. 해외 통화하는거 생각해보샘

 -3 LAN(Local Area Network)
	-정의
각 집을 봐도 스위치나 라우터 같은거 하나 쯤은 잇음. 이거에 티비, 컴퓨터 폰등이 연결 돼 있는 구조인데 좁은 범위에서 dte들의 연결을 제공함.
	-토폴로지
네트워크에서 호스트들을 연결하는 케이블 구조 혹은 기하학적 모양.

각 토폴로지마다 장단이 잇음. 우리가 주로 사용하는건 성형.

		장점							단점

성형,트리형		유지보수, 확장 유리. 하나의 중앙에 분산 연결되어 호스트의 고장은 영향 안줌. 중앙 전송제어장치의 고장이 치명적. 
								        케이블링 비용 커짐. 통신량 많으면 전송지연 발생

버스형		설치 용이, 케이블링 소요비용 낮음. 하나의 호스트 고장이 네트워크 영향안줌.  재구성결함분리 어렵고 버스 케이블 결함발생치명적

링형		단순해 설치와 재구성 간편 장애 발생한 호스트 쉽게 찾을 수 잇음		링을 제어하기 위한 절차 복잡으로 기본적 지연
		호스트 수 늘어나도 네트워크 성능 올라감.				단방향 전송으로 링결함시 통신불가. 새호스트 추가시 물리적으로 링절단필요

 01 osi 7layer - 2 Osi 7 layer

 통신들이 이제 정확히 어떻게 이루어지는데 물리적인걸 넘어 소프트웨어단으로 들어가 살펴보겟삼

 -기본개념
 Iso에서는 개방형 시스템 간 상호 접속(osi: Open System Interconnections)을 위해 표준화된 네트워크 구조를 제공하는 기본 참조 모델을 제정 했다.
 기종간 상호 접속을 위한 가이드 라인이라 할 수 있는데, 요즘엔 많이 안쓰이고 tcp/ip 쓰임. 70년대 이후 인터넷 발달하고 각 사별로 다른 프로토콜 사용하기 시작해서 국제기구에서 osi 7 layer 만듬.
표준화된 네트워크 구조를 만들어서 서로 통신할 수 있게 하자. 너무 복잡하고 세세함. 세세해서 공부하긴 좋은데 복잡해서 실제로 응용단에서 이걸 구현하기가 쉽진 않음. 공부하긴 좋지만 사용하기엔 문제가 잇음.

 상위계층 5-7 사용자가 통신을 쉽게 이용할 수 있도록 도와줌. 사용자와 가깝구나.
 어 프 세

 하위계층 1-4 효율적이고 정확한 전송과 관계된 일을 담당. 네트워크와 가깝구나
 트 네. 데링 피
 -계층구조
제반 통신절차 가운데 비슷한 기능을 갖는 모듈을 동일 계층으로 분할함.
각 계층간의 독립성 유지.
한 모듈에 대한 변경이 다른 전체 모듈에 미치는 영향 최소화.
계층은 2개 그룹으로 분리.
상위 3계층인 유저가 메시지 교환시 사용
하위 4계층은 메시지가 호스트에서 사용.

 -피어투 피어 간 통신
 하향할 수록 프로토콜 제어정보(pci)를 패킷에 덧붙임 (패킹). 상향할수록 다시 벗김.

 -캡슐화와 역캡슐화(encapsulation, decapsulation)

캡슐화 
어떤 것을 다른 것에 포함 시킴으로써 포함된 것이 외부에서 보이지 않도록 함.
프로토콜 데이터 단위를 다른 프로토콜 데이터 단위의 데이터 필드 부분에 위치 시키는 기술.
일종의 패킹 과정을 캡슐화라 함.
데이터를 추가하는 기술

역캡슐
이를 제거하거나 또는 캡슐화 이전으로 복원
캡슐화의 반대 동작
데이터를 추출하는 기술

노트북을 택배로 보내는 상황을 생각해보자. 새 상자도 필요하고 안에 뽁뽁이 완충제 받는사람 주소등 넣어야함.
프로토콜 데이터 필드에 위치하고 있는 데이터 단위를 추출.

 각 층계의 데이터를 pdu(protocol data unit)이라 부른다. 걍 패킹된 사앹를 말하는거임.

 -2 각 레이어의 기능 및 역할.
	-물리계층 피지컬 레이어.
물리매체, 물리적 링크의 설정/유지/해제
사용자 장비와 네트워크종단장비 사이 물리적 전기적 인터페이스 규정
전송 선로의 종류에 따른 전송 방식과 인코딩 방식 (자기 나름대로의 프로토콜) 결정
송신 측 물리 계층은 데이터 링크 계층으로 부터 받은 데이터를 비트단위로 변환.
수신 측 물계에서는 받은 비트를 데링층의 데이터로올림.

걍 전기 선임. 네트워크가 전기선을 통해 물리적 전기적 인터페이스에 전송방식을 가지고 비트단위로 전환해서 보낸다.
데링에서 온 프레임(바이너리 코드)를 전기신호 (비트)로 바꿔 보냄

	-데이터 링크 계층(데이터 링크 레이어)
물리계층에서 사용하는 비트에 대한 것들을 원활하게 전송하기 위해 흐름제어라든지 오류제어를 해주고
헤더에 프레임스탓 표시 목적지 주소, 트엘리어에 오류 검출 코드 프레임 스탑등을 포함함.(비트는 전기적 신호기땜에 잡음이 많이 껴잇어서 오류검출코드 필요)

두 서브 계층으로 이루어져 있고

하나는 논리적 연결제어를 하는 llc와 장비와 장비간 물리적 접속을 하는 mac로 나뉜다. 이두가지를 통과하면 패킷 이라는 패킷이란게 잇는데 헤더-패킷-트레일러 다붙여 프레임이라 함. 상향할떄는 헤더 트레일러 벗기고 패킷(데이타 부분만)만 올라감.
	-네트워크 계층
이전이 단대 단연결이엿으면 이건 종단간 연결.
송신측 부터 수신측 까지 데이터 안전전달을 위해 논리적 링크 설정. = 아이피를 설정한다.
실 네트워크는 단말기 사이에 많은 라우터나 중개기 등이 잇음. 이게 너무 복잡하기 떔에 그냥 논리적으로 바로 클-섭 연결이 돼 있는 것처럼 보이게 하겠다는 거임. 이게 아이피.
상위 계층의 데이터를 작은 크기의 패킷으로 전송한다. = 사실 데이터는 엄청큼 report.doc라는 40mb파일을 만들엇다 해보자. 한번에 전송하기엔 너무 크고 손실이나 오류가 발생할 가능성이 너무 큼.
글키떔에 잘개 쪼갬. mpu라고 함. Max packet unit 그리고 각 하나를 패킷으로 만듬. 이거 하나가 헤더 푸터 붙어서 프레임 만들어지는 거임. 즉 프레임이나 비트로 나눠 보냄.

개방형 시스템사이에서 네트워크 연결ㅇㄹ 관리하고 유지하며 해제. 스위치는 4걔충 스위치도 있지만  2계층에서 주로 동작하고, 
스위치 . 패킷의 수신주소를 보고 정해진 방향으로 전송. 동작속도는 라우터 보다 빠름. 보통 라우터가 더 많이 쓰임. 라우터는 연결을 유지할수 있또록 관리하고 유지하고 잇음. 라우팅 테이블에 따라 네이버의 주소를 따라서 라우팅을 하는거임.

네트워크 주소는 발신지로부터 목적지 까지 동일하게 적용된다. 한번 목표지를 네이버로 잡았으면 그 목표 논리주소는 계속 유지됨. 물리주소는 패킷이 한 시스템에서 다른 시스템으로 이동될때마다 변경. 데이터 링크 계층은  인식할수 있는 범위는 그냥 바로앞 라우터까지임. 그래서 다 따로 보내는 거임. 즉 네이버라는 논리주소를 가지고 있기 때문에 목적지를 향해 갈수잇는거임

컴퓨터가 있으면 라우터에 접속해서 네이버를 요청한다. 물리로 돼있지 논리적인 주소와 바로 연결돼 잇지 않음. 그래서 클라이언트는 네트워크 드라이버 같은 물리 장치를 통해 갖고 있는 물리주소를 가지고 물리계층에 대한 정보를 b로 보냄. 그럼 b는 그걸 버리고 그다음으로 연결된. 라우팅 테이블을 보고 c로 보냄. c는 그럼 또 그걸 가지고 라우팅테이블 참조~~~ 일련의 과정. 물리주소는 계속 한단계를 거칠떄마다 바뀜.  라우터가 수신하고 다시 송신할때도 또 주소 바뀜. 그러나 ip자체는 바뀌지 않는다. 네트워크 자체는 바뀌지않는다. 그러나 앞에서 말햇듯이 데이터링크에서 헤더의 어드레싱 부분은 계속 바뀐다는 것이다. 그래서 2계층은 1계층간의 단거리 통신을 말한거고 네트워크 레이어부터는 논리주소를 활용 멀리 멀리~ 근데 원래 어려운거고 와이어 샤크라는 툴쓰면 다 알아서 분석해줌. 이런것들이 있따는 거 그냥 알고 있고 ccna나 ccnp확실하게 알고 잇으면 관련된 내용을 정확히 학습가능



		-물리 주소와 네트워크 주소

시리어 포트나 아이피주소 같은 것들이 잇음. 라우터 아이피(ex 10.1.1.0/30), 글고 라우팅 테이블은 목적지에대한 아이피를 가지고 잇음. 이런식으로 연결됨. 너무 자세히 보면 또 너무 벗어남 이미 설명하기도 햇고. 그래서 어쩃든 물리적 통신과 네트워크 주소는 따로 다룬다. 그래서 라우터등은 물리적인 주소와 아이피 주소가 따로잇다. 그정도 사실만 아삼

	-전송계층

하위계층의 마지막 단계. 네트워크에선 섭클간 논리적 주소연결이 잇다 햇는데 전송계층은 한번 더 확장해 포트까지 연결이 된다. 아이피는 어떤 컴퓨터냐 를 나타낸다고 보면 되고, 포트는 서비스를 나타낸다.
한 컴퓨터에는 여러가지 서비스를 제공하고잇음. 그래서 이런 서비스간을 이어주는게 전송계층임. 종단간 제어. 아이피가 컴퓨터간의 종단연결이였따면 얘는 서비스간 종단연결임.
인터넷 간에 연결이 다음에도 http80이나 텔넷23, ftp 21같은 서비스가 잇음. 이런 서비스를 하나의 컴퓨터에서 제어하고 있기 땜에 서비스를 구분해준 얘가 바로 트렌스포트 레이어다.


	-상위계층
딱히 설명할게 없음. http나 프로토콜 계열 들가야 얘기가 나옴.
		-세션계층
특정한 프로세스들 사이에서 세션이라고 불리는 연결을 확립하고 유지하며 동기화. 세션은 어렵게 볼건 없고 걍 연결이라는 뜻 ㅎ
		-표현 계층
데이터 표현방식. 포맷을 맞추는거임. 데이터 보안과 효율적 전송을 위해 암호화와 압축 수행하여 세션 계층으로 내림.
		-응용계층
최상위 계층으로 응용프로세스(이용자나 응용프로그램등이 상호 동작하는 환경) 네트워크 환경에 접근하는 수단을 제공. 우리가 브라우저 창 키고 접속할때 일일이 패킷을 구현하고 표현이랑 세션을 어캐할건지 하지 않지. 이걸 브라우저가 함. 즉 네트워크환경에 접근하는 수단을 제공하고 있고, 응용 프로세스들이 상호간에 유용한 정보 교환할 수 있도록 하는 창구 역할 담당


응용		각종 응용서비스 제공				메시지		ftp,tftp,snmp,smtp,텔넷,http
		네트워크관리


표현		네트워크 보안(암/복호화)					ASCII, Mpeg, jpg
		압축/압축해제. 포맷 변환 수행

세션		소켓프로그램, 동기화						전송모드 결정(반이중,전이중)NFS, SQL, RPC
		동기화
		세션연결/관리/종료

전송		데이터 전송보장, 				세그먼트		tcp,udp,ssl
		흐름 제어
		quality of services(qos)


네트워크		통신경로 설정, 중계기능 담당			패킷		ip, icmp,igmp, rip, ospf
		라우팅, 혼잡제어
		데이터그램, 가상회선 방식
		ipv4, ipv6

데이터 링크		오류제어, frame화,				프레임		arp,rarp, ppp,slip
		매체제어(Mac)
		에러검출, 에러정정, 흐름제어

물리		물리적 연결설정, 해제				비트스트림		기계적 전기적, 절차적 규격
		전송방식, 전송매체


포맷등 표현, 인코딩 방식등을 관리하는 계층 

 02 tcp/ip 4계층 - tcp/ip 개요

 -개요
미국방연구계획국 알파넷, 1973 티씨피 개발을 했고 어쩌고저쩌고 진화햇다. 현재는 대부분 tcp/ip로 통신을 하고 있음. 이전에 배웠떤 osi랑 비슷한 층계로 나뉨.

 -tcp/ip 계층구조 및 계층관계
여러가지 프로토콜 조합을 의미하나 tcp ip가 가장 많이 사용돼서 이름지어짐.

데이터링크(네트워크 인터페이스층), 네트워크(인터넷층), 전송(호스트투 호스트 전송층), 응용층 으로 구성된다.

(물리,데링),(네트워크),(전송),(어,프,세) 너무 잘게 쪼개졋던거에서 지해롭게 사용할수잇도록 나눈거라고 이해하삼

		-tcp/ip 프로토콜 계층 구조

osi랑 유사해서 복습하는 것처럼 느껴질 수 잇음.
			-데이터링크 계층(network interface) 데이터링크계층과 물리계층
데이터 송수신하는 역할.

			-네트워크 계층(인터넷)
논리적 주소관리, 라우팅.
Ip: 호스트들과 네트워크에서 주소를 관리, 패킷을 라우팅
arp(address resolution protocol)
2계층간 통신에서는 아이피를 사용하지 않는다. 피지컬 주소를 사용하는데 이걸 맥어드레스라한다. 이 피지컬 레이어를 사용해 통신하기 때문에 반드시 2계층에 대한 정보가 필요하다. 즉 ip주소는 아는데 물리주소를 모른다, ㄱ때 사용되는 프로토콜임.
와 icmp(internet control message protocol) 패킷 전송에 관한 메시지 처리임.
ip 주소는 신뢰성이 없음. (연결이 됏는지 안됏는지 확인을 안함) ip는 그냥 보내면 끝임. 돌려받는 통신이 없음. 잘 보내졌나 확인할 길이 없음 . 그래서 icmp라는 추가적 기능을 수행하도록 만듬. 터미널에 핑을 쳐봣을때 응답을 받았다는 거는 icmp를 사용하고 있다는 이야기임. 데이터를 보냈을때 돌려받는, 신뢰성있는 연결이됐는지 확인하는
프롵콜

			-전송계층

호스트들간 통신을 제공하고 2개의 프로토콜이 잇음. 서로 어떤 서비스, 포트를 어떻게 연결할걸지 정의하는게 tcp,udp임. 여기서 두가지 소켓이 통신을하는데. 이걸 소켓이라 부름. 소켓은 서비스를 제공하고. 궁극적으로 서비스를 제공하는 곳은 프로세스임.  소켓은 일종의 전화기 같은 역할. 그래서 소켓이 번호를 갖는거임. 그게 바로 포트라고 이야기함.

포트를 만든 이유가 서비스를 제공하기 위함임. 그래서 걍 혼용해서 나는 쓰는중.소켓을 만드는 프로세스는 여러개의 소켓을 만들 수 잇음. 이 소켓이라는 얘가 tcp와 udp를 사용함. 각각의 특징이 잇음. 그 특징, 환경에 맞게 사용하고 잇음.

 				-tcp(Transmission Control Protocol)
연결지향 일반적으로 데이터의 확실한 전송을 위해 수신측에 확인 메시지를 요구. 방금 icmp랑 비슷함. 패킷 손실은 빈번히 발생하는 일임. 만약 카톡 이미지 전송할때 이미지 날아간채로 보내고 받냐? 아님. 계속 다시 받기 위해 왔따리 갓다리함. 진짜 인터넷 끊기면 전송실패라고 뜨긴하는데 그렇지 안자나? 어쩃든 신뢰성이 높다
zip파일 같이 조금만 손상돼도 열어볼수없는 그런 파일을 첨부할떄 주로 사용

				-udp(user data protocol)
비 연결 지향.
		
실시간으로 패킷 전송하여 빠르나 정확한 전달을 보장하진 않음. 라이브 방송 같이 실시간이 중요한 애들은 udp를 사용함. 받다가 일부분이 누락되고 지지직거리고 망가진걸 받아도 걍 무시하고 바로 다음 것 받는거임. 정확하진 않으나 실시간이기 떔에 사용하는검

			-응용계층
어플이 네트워크에 접근 가능하도록 한다. 웹브라우저 같은 것들이 네트워크에 접근할수잇도록 구성햇다 이런 의미

 -포트주소의 의미와 할당 원칙
	-포트의 개요
포트 번호는 인터넷이나 다른 네트워크 메시지가 서버에 도착했을때 전달 돼야할 특정 프로세스를 인식하기 위한 방법. 근데 엄밀히 말하면 특정 프로세스는 아니고 특정 프로세스가 갖고 있는 소켓을 인식하기 위한 방법임.
tcpㅗ아 udp에서 포트번호는 단위메시지에 추가되는 헤더 내에 넣어지는 16비트 정수의 형태를 가짐.
포트번호는 16비트로 이루어져 잇음. 이이야기는 2^16단위로 만들어진다는거고 0부터 65535까지 65536개의 포트를 구분할수 잇다는 뜻.

	-포트번호와 소켓
통신을 위해 tcp헤더에 송신자 포트와 수신자 포트 정보를 삽입해 패킷 생성. 패킷을 서버로 전달해 프로세스와 연결되어 서비스 이용가능
포트번호는 15비트이며 0에서 65535번까지 있다. 0~1023까지는 웰노운 포트라고해서 가능하면 임의로 쓰지 않음. 응용프로그램 개발자가 사용할수없는 영역으로 정의 하고 잇음. 

		-주요 포트번호 (1-1023): root의 권한이 필요한 포트
ftp(data) 20
ftp(control) 21
SSH 22
Telnet 23
SMTP 25 메일프로토콜
DNS(TCP/UDP) 53
BOOTP 67/68
TFTP-UDP 69
Finger 79
HTTP 80
POP3 110 메일쪽
IMAP 143
SNMP-UDP 161 심플 네트워크 매니지 프로토콜 네트워크 관련 애들 
SNMP(Trap)-UDP 162
BGP-TCP 179
IMAP3 220
SSL/TLS 443 보안(https)
IKE-UDP(vpn구성시사용) 500
루트의 권한이 잇어야만 열수 잇음 유닉스쪽에서는 

 -1ipv